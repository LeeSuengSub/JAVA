1.
 리턴타입 : int
 메소드 이름 : getCount
 파라미터 타입 : (List<Object>)

2.
 리턴타입 : 없음(void)
 메소드 이름 : insertData
 파라미터 타입 : (Map<String, Object>)

3.
 리턴타입 :  list
 메소드 이름 : insertData
 파라미터 타입 : (String)

4.
 오버라이딩 : 같은 이름의 메소드 생성가능 단, 파라미터값이 달라야 한다.
 오버로딩 : 자식 메소드가 부모 메소드의 기능을 재정의

5.
 차이점 : 다중 상속이 가능한가 아닌가

6.
 상속을 이용하면 중복되는 코드들을 줄일 수 있다.
 부모클래스의 기능을 자식클래스에서 사용이 가능하다.
7.
 클래스를 초기화하는게 목적이다.
 리턴타입이 없다.

8.
 배열을 쉽게 사용할수 있게 해준다.

9.
 a.count : 10
 a.temp : 20
 a2.count : 20
 a2.temp : 20

10.
 2000

11.
 public A(String name, int Age){
	this.name = name;
	this.Age = Age;
}